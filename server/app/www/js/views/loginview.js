// Generated by CoffeeScript 1.4.0
(function() {
  var LoginView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LoginView = (function(_super) {

    __extends(LoginView, _super);

    function LoginView(loginSuccessAction, loginFailAction) {
      this.loginSuccessAction = loginSuccessAction;
      this.loginFailAction = loginFailAction;
      this.afterClose = __bind(this.afterClose, this);

      this.attachEvents = __bind(this.attachEvents, this);

      this.render = __bind(this.render, this);

      LoginView.__super__.constructor.call(this);
      this.render();
      this.modalConfig.urlLess = true;
    }

    LoginView.prototype.render = function() {
      this.setTitle('Login with Facebook');
      this.createModalContainer("login-view-container");
      $('.login-view-container').html('\
            <div class="main-section">\
                <p>\
                    You need to login to do that.\
                </p>\
                <img class="fb-login-button" src="/images/facebook.png" alt="FB connect" /> \
                <img class="twitter-login-button" src="/images/twitter.png" alt="FB connect" /> \
            </div>');
      this.attachEvents();
      return this.displayModal();
    };

    LoginView.prototype.attachEvents = function() {
      var _this = this;
      $('.login-view-container .fb-login-button').click(function() {
        FB.login((function(response) {
          _this.loginSuccess = response.status === 'connected';
          if (_this.loginSuccess) {
            app.login('fb', response.authResponse.accessToken);
          }
          return $('.login-view-container').trigger('close', {
            mustClose: true
          });
        }), {
          scope: 'email,publish_actions'
        });
        return false;
      });
      return $('.login-view-container .twitter-login-button').click(function() {
        window.location.href = "/auth/twitter";
        return false;
      });
    };

    LoginView.prototype.afterClose = function() {
      var _this = this;
      return function() {
        if (_this.loginSuccess) {
          return typeof _this.loginSuccessAction === "function" ? _this.loginSuccessAction() : void 0;
        } else {
          return typeof _this.loginFailAction === "function" ? _this.loginFailAction() : void 0;
        }
      };
    };

    return LoginView;

  })(Poe3.ModalView);

  window.Poe3.LoginView = LoginView;

}).call(this);

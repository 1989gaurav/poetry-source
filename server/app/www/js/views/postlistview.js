// Generated by CoffeeScript 1.4.0
(function() {
  var PostListView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  PostListView = (function(_super) {

    __extends(PostListView, _super);

    function PostListView(renderTo, tagPrefix, posts) {
      this.renderTo = renderTo;
      this.tagPrefix = tagPrefix;
      this.posts = posts;
      this.updatePost = __bind(this.updatePost, this);

      this.getPostByUID = __bind(this.getPostByUID, this);

      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);

      PostListView.__super__.constructor.call(this, {
        model: this.model
      });
    }

    PostListView.prototype.initialize = function() {
      this.containerPrefix = "e_" + (Poe3.uniqueId());
      return $(this.renderTo).html(this.el);
    };

    PostListView.prototype.render = function() {
      var attachContribAlert, layoutHelper, style,
        _this = this;
      $(this.el).html(this.template({}));
      style = this.defaultLayoutStyle();
      style.marginLeft = 0;
      attachContribAlert = function(_post, fn) {
        return function(html) {
          var currentParts, numContribs, part;
          fn(html);
          currentParts = (function() {
            var _i, _len, _ref, _results;
            _ref = _post.get('parts');
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              part = _ref[_i];
              if (part.sequence === _post.get('selectedParts').length) {
                _results.push(part);
              }
            }
            return _results;
          })();
          numContribs = currentParts.length;
          if (numContribs > 0) {
            return $("" + _this.containerPrefix + "-#postid-" + _post.id).prepend("                        <div class=\"contrib-alert\">                            <span class=\"icon\">                                <i class=\"icon-file\"></i> " + numContribs + "                             </span>                            <span class=\"subtext\">                                from " + (((function() {
              var _i, _len, _results;
              _results = [];
              for (_i = 0, _len = currentParts.length; _i < _len; _i++) {
                part = currentParts[_i];
                _results.push(part.createdBy.name);
              }
              return _results;
            })()).join(', ')) + "                            </span>                            <div style=\"clear:both\"></div>                        </div>");
          }
        };
      };
      layoutHelper = new Poe3.LayoutHelper(this.posts, style, ".post-list-view .viewport", ".post-list-view .items", function(post) {
        return "#" + _this.containerPrefix + "-postid-" + post.id;
      }, function(post) {
        return post.isLoadedAsync();
      }, (function(post, fnAppend, fnOnAsyncWidgetLoad, fnOnSyncWidgetLoad) {
        return new Poe3.PostListViewItem(post, _this.containerPrefix, _this.tagPrefix, attachContribAlert(post, fnAppend), fnOnAsyncWidgetLoad, fnOnSyncWidgetLoad);
      }), (function() {}));
      return layoutHelper.doLayout();
    };

    PostListView.prototype.getPostByUID = function(uid) {
      var post;
      return ((function() {
        var _i, _len, _ref, _results;
        _ref = this.posts;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          post = _ref[_i];
          if (post.get('uid') === uid) {
            _results.push(post);
          }
        }
        return _results;
      }).call(this))[0];
    };

    PostListView.prototype.updatePost = function(post) {
      var p;
      this.posts = (function() {
        var _i, _len, _ref, _results;
        _ref = this.posts;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          p = _ref[_i];
          if (p.get('uid') !== post.get('uid')) {
            _results.push(p);
          }
        }
        return _results;
      }).call(this);
      return this.posts.push(post);
    };

    return PostListView;

  })(Poe3.BaseView);

  window.Poe3.PostListView = PostListView;

}).call(this);

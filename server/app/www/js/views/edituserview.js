// Generated by CoffeeScript 1.4.0
(function() {
  var EditUserView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EditUserView = (function(_super) {

    __extends(EditUserView, _super);

    function EditUserView(domain, username) {
      this.domain = domain;
      this.username = username;
      this.save = __bind(this.save, this);

      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);

      EditUserView.__super__.constructor.call(this, {
        model: new Poe3.User({
          domain: this.domain,
          username: this.username
        })
      });
    }

    EditUserView.prototype.initialize = function() {
      this.model.bind('change', this.render, this);
      return this.model.fetch();
    };

    EditUserView.prototype.render = function() {
      var user;
      this.setTitle("Editing " + (this.model.get('name')));
      this.createModalContainer('edit-user-view-container');
      user = this.model.toTemplateParam();
      $('.edit-user-view-container').html(this.el);
      $(this.el).html(this.template(user));
      this.displayModal();
      $(document).bindNew('click', '.edit-form button.save', this.save);
      return this.onRenderComplete('.edit-user-view-container');
    };

    EditUserView.prototype.save = function() {
      var params, user,
        _this = this;
      params = {
        id: this.model.get('id'),
        about: $('.edit-user .about').val(),
        twitterUsername: $('.edit-user .twitter-username').val(),
        website: $('.edit-user .website').val()
      };
      user = new Poe3.User(params);
      return user.save({}, {
        success: function(model, resp) {
          app.activeView.model.set(resp);
          return _this.closeModal();
        }
      });
    };

    return EditUserView;

  })(Poe3.ModalView);

  window.Poe3.EditUserView = EditUserView;

}).call(this);
